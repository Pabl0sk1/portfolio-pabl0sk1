---
import HtmlIcon from "./icons/Html.astro";
import CssIcon from "./icons/Css.astro";
import SassIcon from "./icons/Sass.astro";
import BootstrapIcon from "./icons/Bootstrap.astro";
import JavascriptIcon from "./icons/Javascript.astro";
import JavaIcon from "./icons/Java.astro";
import TypescriptIcon from "./icons/Typescript.astro";
import ReactIcon from "./icons/React.astro";
import AngularIcon from "./icons/Angular.astro";
import SpringbootIcon from "./icons/Springboot.astro";
import PostgresqlIcon from "./icons/Postgresql.astro";
import FirestoreIcon from "./icons/Firestore.astro";
import IonicIcon from "./icons/Ionic.astro";
import TailwindIcon from "./icons/Tailwind.astro";
import AstroIcon from "./icons/AstroBuild.astro";
import ViteIcon from "./icons/Vite.astro";
import MysqlIcon from "./icons/Mysql.astro";
import MongodbIcon from "./icons/Mongodb.astro";
import PythonIcon from "./icons/Python.astro";
import DjangoIcon from "./icons/Django.astro";
import LinkIcon from "./icons/Link.astro";
import RepoIcon from "./icons/Repo.astro";
import LinkButton from "./LinkButton.astro";

const TAGS = {
  ASTROBUILD: {
    name: "Astro",
    class: "bg-white text-orange-500",
    icon: AstroIcon,
  },
  VITE: {
    name: "Vite",
    class: "bg-white text-violet-500",
    icon: ViteIcon,
  },
  HTML: {
    name: "HTML",
    class: "bg-white text-red-500",
    icon: HtmlIcon,
  },
  CSS: {
    name: "CSS",
    class: "bg-white text-violet-500",
    icon: CssIcon,
  },
  BOOTSTRAP: {
    name: "Bootstrap",
    class: "bg-white text-violet-500",
    icon: BootstrapIcon,
  },
  TAILWIND: {
    name: "Tailwind",
    class: "bg-white text-sky-500",
    icon: TailwindIcon,
  },
  SASS: {
    name: "SASS",
    class: "bg-white text-pink-500",
    icon: SassIcon,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-white text-yellow-500",
    icon: JavascriptIcon,
  },
  TYPESCRIPT: {
    name: "TypeScript",
    class: "bg-white text-blue-500",
    icon: TypescriptIcon,
  },
  REACT: {
    name: "React",
    class: "bg-white text-sky-500",
    icon: ReactIcon,
  },
  ANGULAR: {
    name: "Angular",
    class: "bg-white text-red-500",
    icon: AngularIcon,
  },
  PYTHON: {
    name: "Python",
    class: "bg-white text-blue-500",
    icon: PythonIcon,
  },
  DJANGO: {
    name: "Django",
    class: "bg-white text-green-500",
    icon: DjangoIcon,
  },
  JAVA: {
    name: "Java",
    class: "bg-white text-amber-500",
    icon: JavaIcon,
  },
  SPRINGBOOT: {
    name: "Spring Boot",
    class: "bg-white text-green-500",
    icon: SpringbootIcon,
  },
  IONIC: {
    name: "Ionic",
    class: "bg-white text-blue-500",
    icon: IonicIcon,
  },
  FIREBASE: {
    name: "Firebase",
    class: "bg-white text-yellow-500",
    icon: FirestoreIcon,
  },
  POSTGRESQL: {
    name: "PostgreSQL",
    class: "bg-white text-blue-500",
    icon: PostgresqlIcon,
  },
  MYSQL: {
    name: "MySQL",
    class: "bg-white text-blue-500",
    icon: MysqlIcon,
  },
  MONGODB: {
    name: "MongoDB",
    class: "bg-white text-green-500",
    icon: MongodbIcon,
  },
};

const PROJECTS = [
  {
    title: "Muebleria",
    description: "Sistema CRUD con módulos de inventario y registro de ventas.",
    link: "",
    github: "https://github.com/Pabl0sk1/muebleria-proyecto",
    image: "/projects/Muebleria.webp",
    tags: [
      TAGS.POSTGRESQL,
      TAGS.HTML,
      TAGS.JAVASCRIPT,
      TAGS.REACT,
      TAGS.CSS,
      TAGS.BOOTSTRAP,
      TAGS.JAVA,
      TAGS.SPRINGBOOT,
    ],
  },
  {
    title: "Atelier",
    description:
      "Sistema integral para negocio local que gestiona compras, ventas y alquileres, con control de inventario, emisión de tickets, generación de informes y autenticación con roles de usuario.",
    link: "",
    github: "",
    image: "/projects/Atelier.webp",
    tags: [
      TAGS.POSTGRESQL,
      TAGS.HTML,
      TAGS.JAVASCRIPT,
      TAGS.REACT,
      TAGS.CSS,
      TAGS.BOOTSTRAP,
      TAGS.JAVA,
      TAGS.SPRINGBOOT,
    ],
  },
  {
    title: "Shop Easy",
    description:
      "Aplicación móvil multiplataforma para gestión de listas de compras con marcado en tiempo real.",
    link: "https://lista-compras-fa747.web.app/",
    github: "https://github.com/Pabl0sk1/lista-compras",
    image: "/projects/ListaCompras.webp",
    tags: [
      TAGS.IONIC,
      TAGS.ANGULAR,
      TAGS.FIREBASE,
      TAGS.TYPESCRIPT,
      TAGS.HTML,
      TAGS.SASS,
    ],
  },
  {
    title: "Fast-Food",
    description:
      "Sitio web atractivo e interactivo para un negocio ficticio de comida rápida. Incluye menú dinámico, secciones informativas, horarios, mapa embebido de ubicación y navegación responsive con swiper.",
    link: "https://fast-foodon.netlify.app/",
    github: "https://github.com/Pabl0sk1/fast-food",
    image: "/projects/Fast-Food.webp",
    tags: [TAGS.HTML, TAGS.JAVASCRIPT, TAGS.CSS],
  },
];
---

<div
  class="grid grid-cols-1 md:grid-cols-2 gap-12 max-w-6xl mx-auto mt-12 px-4"
>
  {
    PROJECTS.map(({ title, description, image, tags, link, github }) => (
      <article class="group relative flex flex-col overflow-hidden rounded-2xl shadow-lg hover:shadow-2xl transition-shadow duration-500">
        {/* Imagen */}
        <div class="relative">
          <img
            src={image}
            alt={title}
            class="w-full h-64 md:h-80 object-cover transition-transform duration-500 group-hover:scale-102"
          />
        </div>

        {/* Contenido */}
        <div class="p-6 bg-gray-50 dark:bg-gray-900 flex flex-col justify-between h-full">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-white mb-2">
            {title}
          </h3>
          <p class="text-gray-700 dark:text-gray-300 mb-4">{description}</p>

          {/* Tags debajo de la descripción */}
          <div class="flex flex-wrap gap-2 mb-4">
            {tags.map((tag) => (
              <span
                class={`flex items-center gap-1 px-3 py-1 rounded-full text-xs font-medium ${tag.class} backdrop-blur-sm bg-white/20`}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            ))}
          </div>

          {/* Botones */}
          <div class="flex gap-4 mt-auto">
            {github && (
              <LinkButton
                href={github}
                class="bg-gray-800 dark:bg-gray-700 hover:bg-gray-900 dark:hover:bg-gray-600 transition-colors"
              >
                <RepoIcon class="size-4" /> Repositorio
              </LinkButton>
            )}
            {link && (
              <LinkButton
                href={link}
                class="bg-blue-600 dark:bg-blue-500 hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors"
              >
                <LinkIcon class="size-4" /> Website
              </LinkButton>
            )}
          </div>
        </div>
      </article>
    ))
  }
</div>

---
const navItems = [
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "Stack",
    label: "stack",
    url: "/#stack",
  },
  {
    title: "Sobre mí",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contactar",
    label: "contactar",
    url: "/#contactar",
  },
];
---

<header
  class="fixed top-0 z-10 flex justify-center items-center w-full mx-auto mt-2"
>
  <nav
    class="flex px-3 text-sm sm:text-base font-medium rounded-full text-black dark:text-gray-200 justify-center items-center border bg-gray-400 border-gray-200 dark:bg-gray-800 dark:border-gray-600"
  >
    {
      navItems.map((link) => (
        <a
          href={link.url}
          aria-label={link.label}
          class="relative block px-1 md:px-2 py-2 text-xs sm:text-sm transition hover:text-blue-800 dark:hover:text-blue-500"
        >
          {link.title}
        </a>
      ))
    }
  </nav>
</header>

<script>
  // Espera a que el contenido se cargue completamente
  window.addEventListener("load", () => {
    // Si la URL tiene #top, forzamos el scroll a la parte superior
    if (window.location.hash === "/") {
      window.scrollTo(0, 0);
    }
  });

  const sections = document.querySelectorAll("section[id]");
  const navLinks = document.querySelectorAll("nav a");

  const observer = new IntersectionObserver(
    (entries) => {
      let anyVisible = false;

      entries.forEach((entry) => {
        const id = entry.target.getAttribute("id");
        const link = document.querySelector(`nav a[href="/#${id}"]`);

        if (entry.isIntersecting) {
          anyVisible = true;
          navLinks.forEach((l) =>
            l.classList.remove("text-blue-800", "dark:text-blue-500")
          );
          link?.classList.add("text-blue-800", "dark:text-blue-500");
        }
      });

      // Si ninguna sección está visible, limpiamos todos los links
      if (!anyVisible) {
        navLinks.forEach((link) =>
          link.classList.remove("text-blue-800", "dark:text-blue-500")
        );
      }
    },
    {
      threshold: 0.5,
    }
  );

  sections.forEach((section) => observer.observe(section));
</script>

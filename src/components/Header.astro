---
import SunIcon from "./icons/Sun.astro";
import MoonIcon from "./icons/Moon.astro";
import ScreenIcon from "./icons/Screen.astro";

const navItems = [
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "Stack",
    label: "stack",
    url: "/#stack",
  },
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contactar",
    label: "contactar",
    url: "/#contactar",
  },
];
---

<header
  class="fixed top-0 z-10 flex justify-center items-center w-full mx-auto mt-2"
>
  <nav
    class="flex px-3 text-sm sm:text-base font-medium rounded-full text-black dark:text-gray-200 justify-center items-center border bg-gray-400 border-gray-400 dark:bg-gray-800 dark:border-gray-600"
  >
    {
      navItems.map((link) => (
        <a
          href={link.url}
          aria-label={link.label}
          class="relative block font-semibold px-1 md:px-2 py-2 text-xs sm:text-sm text-[10px] transition hover:text-blue-800 dark:hover:text-blue-500"
        >
          {link.title}
        </a>
      ))
    }
    <button
      id="theme-toggle"
      aria-label="Toggle Dark Mode"
      class="ml-2 p-1 cursor-pointer rounded-full bg-white/75 dark:bg-black/45 text-yellow-500 dark:text-blue-800 hover:bg-white dark:hover:bg-black transition"
    >
      <ScreenIcon
        id="default-icon"
        class="w-4 h-4 md:w-5 md:h-5 text-red-400"
      />
      <SunIcon id="sun-icon" class="w-4 h-4 md:w-5 md:h-5 hidden" />
      <MoonIcon id="moon-icon" class="w-4 h-4 md:w-5 md:h-5 hidden" />
    </button>
  </nav>
</header>

<script>
  if (window.location.pathname === "/" && !window.location.hash) {
    window.scrollTo(0, 0);
  }

  const sections = document.querySelectorAll("section[id]");
  const navLinks = document.querySelectorAll("nav a");

  let currentActiveLink: any = null;
  const observer = new IntersectionObserver(
    (entries) => {
      let visibleSection: any = null;

      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          visibleSection = entry.target;
        }
      });

      if (visibleSection) {
        const id = visibleSection.getAttribute("id");
        const link: any = document.querySelector(`nav a[href="/#${id}"]`);
        if (link !== currentActiveLink) {
          currentActiveLink?.classList.remove(
            "text-blue-800",
            "dark:text-blue-500"
          );
          link.classList.add("text-blue-800", "dark:text-blue-500");
          currentActiveLink = link;
        }
      } else {
        currentActiveLink?.classList.remove(
          "text-blue-800",
          "dark:text-blue-500"
        );
        currentActiveLink = null;
      }
    },
    { threshold: 0.5 }
  );

  sections.forEach((section) => observer.observe(section));
</script>

<script>
  const toggleBtn = document.getElementById("theme-toggle");
  const sunIcon = document.getElementById("sun-icon");
  const moonIcon = document.getElementById("moon-icon");
  const defaultIcon = document.getElementById("default-icon");

  if (toggleBtn && sunIcon && moonIcon && defaultIcon) {
    const applyTheme = (theme: "light" | "dark" | "default") => {
      const html = document.documentElement;

      sunIcon.classList.add("hidden");
      moonIcon.classList.add("hidden");
      defaultIcon.classList.add("hidden");

      if (theme === "light") {
        html.classList.remove("dark");
        sunIcon.classList.remove("hidden");
      } else if (theme === "dark") {
        html.classList.add("dark");
        moonIcon.classList.remove("hidden");
      } else if (theme === "default") {
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          html.classList.add("dark");
        } else {
          html.classList.remove("dark");
        }
        defaultIcon.classList.remove("hidden");
      }
    };

    let savedTheme = localStorage.getItem("theme") as "light" | "dark" | null;

    if (!savedTheme) {
      applyTheme("default");
    } else {
      applyTheme(savedTheme);
    }

    toggleBtn.addEventListener("click", () => {
      let currentTheme: "light" | "dark" | "default";

      // Detectar estado actual
      if (!sunIcon.classList.contains("hidden")) currentTheme = "light";
      else if (!moonIcon.classList.contains("hidden")) currentTheme = "dark";
      else currentTheme = "default";

      let nextTheme: "light" | "dark" | "default";
      if (currentTheme === "default") nextTheme = "light";
      else if (currentTheme === "light") nextTheme = "dark";
      else nextTheme = "default";

      applyTheme(nextTheme);

      if (nextTheme === "default") localStorage.removeItem("theme");
      else localStorage.setItem("theme", nextTheme);
    });
  }
</script>
